{"version":3,"sources":["webpack:///./src/components/BlogSearchForm/BlogSearchForm.jsx","webpack:///./src/templates/blog.jsx"],"names":["SearchForm","query","filter","Form","role","method","Row","form","id","Col","md","FormGroup","Label","for","Input","type","name","bsSize","aria-controls","onChange","e","navigate","location","pathname","encodeURIComponent","target","value","placeholder","Button","color","size","props","data","pageContext","blogCurrentPage","postsNumPages","postEdges","allMarkdownRemark","edges","DATA","blogList","isFirst","isLast","prevPage","toString","nextPage","useState","isShown","setIsShown","results","setResults","srcLocation","window","search","searchQuery","URLSearchParams","get","filterTag","escapeRegExp","string","replace","useEffect","blog","searchRgx","RegExp","tagRgx","tags","match","title","className","config","siteTitle","SEO","SearchResult","PostListing","to","rel"],"mappings":"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","file":"component---src-templates-blog-jsx-b1ff4350c7f59985c1a9.js","sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\n\nconst SearchForm = ({ query, filter }) => (\n  <Form role=\"search\" method=\"GET\">\n    <Row form id=\"search-form\">\n      <Col md=\"2\">\n        <FormGroup>\n          <Label for=\"searchFilter\">\n            <h6>Filter</h6>\n          </Label>\n          <Input\n            type=\"select\"\n            name=\"filter\"\n            id=\"search-tag\"\n            bsSize=\"lg\"\n            aria-controls=\"search-results-count\"\n            onChange={e =>\n              navigate(\n                `${\n                  location.pathname\n                }?keywords=${query}&filter=${encodeURIComponent(\n                  e.target.value\n                )}`\n              )\n            }\n            value={filter}\n          >\n            <option value=\"\">All</option>\n            <option value=\"gsoc\">Google Summer Of Code</option>\n            <option value=\"project\">Project</option>\n            <option value=\"TeraSaturday\">TeraSaturday</option>\n            <option value=\"update\">Update</option>\n          </Input>\n        </FormGroup>\n      </Col>\n      <Col md=\"8\">\n        <FormGroup>\n          <Label for=\"searchQuery\">\n            <h6>Search</h6>\n          </Label>\n          <Input\n            type=\"search\"\n            id=\"search-input\"\n            name=\"keywords\"\n            bsSize=\"lg\"\n            aria-controls=\"search-results-count\"\n            onChange={e =>\n              navigate(\n                `${location.pathname}?keywords=${encodeURIComponent(\n                  e.target.value\n                )}&filter=${filter}`\n              )\n            }\n            placeholder=\"Search...\"\n            value={query}\n          />\n        </FormGroup>\n      </Col>\n      <Col md=\"2\">\n        <Button type=\"submit\" color=\"primary\" size=\"lg\" id=\"search-btn\">\n          Search\n        </Button>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default SearchForm;\n","import React, { useState, useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport SearchForm from \"../components/BlogSearchForm/BlogSearchForm\";\nimport SearchResults from \"../components/SearchResult/SearchResult\";\nimport config from \"../../data/SiteConfig\";\nimport blogList from \"../generated/blog-result.json\";\nimport { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\n\nimport { Badge, Row, Col } from \"reactstrap\";\n\nexport default (\n  { data, pageContext: { blogCurrentPage, postsNumPages } },\n  props\n) => {\n  const postEdges = data.allMarkdownRemark.edges;\n  const DATA = blogList;\n\n  const prefix = \"/blog/\";\n  const isFirst = blogCurrentPage === 1;\n  const isLast = blogCurrentPage === postsNumPages;\n  const prevPage =\n    blogCurrentPage - 1 === 1 ? \"\" : (blogCurrentPage - 1).toString();\n  const nextPage = (blogCurrentPage + 1).toString();\n\n  const [isShown, setIsShown] = useState(false);\n\n  const [results, setResults] = useState([]);\n  // eslint-disable-next-line react/destructuring-assignment\n  let srcLocation = props.location;\n  if (typeof window !== `undefined`) {\n    // eslint-disable-next-line no-restricted-globals\n    srcLocation = location.search;\n  }\n  const searchQuery = new URLSearchParams(srcLocation).get(\"keywords\") || \"\";\n  var filterTag = new URLSearchParams(srcLocation).get(\"filter\") || \"\";\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  useEffect(() => {\n    if (searchQuery || filterTag) {\n      setResults(\n        DATA.filter((blog) => {\n          const searchRgx = new RegExp(escapeRegExp(searchQuery), \"gi\");\n          const tagRgx = new RegExp(escapeRegExp(filterTag), \"gi\");\n          return blog.tags.match(tagRgx) && blog.title.match(searchRgx);\n        })\n      );\n      setIsShown(true);\n    } else {\n      setResults([]);\n      setIsShown(false);\n    }\n  }, [srcLocation]);\n\n  return (\n    <Layout>\n      <div className=\"index-container\">\n        <Helmet title={`Blog | ${config.siteTitle}`} />\n        <SEO />\n        <SearchForm query={searchQuery} filter={filterTag} />\n        {isShown && (\n          <SearchResults\n            id=\"src\"\n            query={searchQuery}\n            filter={filterTag}\n            results={results}\n          />\n        )}\n        {!isShown && <PostListing id=\"blog\" postEdges={postEdges} />}\n      </div>\n      <Row>\n        {!isFirst && (\n          <Col className=\"text-center m-4\">\n            <Link\n              to={`${prefix}${prevPage}`}\n              rel=\"prev\"\n              className=\"btn-primary\"\n            >\n              <FiArrowLeft /> Previous Page\n            </Link>\n          </Col>\n        )}\n        {!isLast && (\n          <Col className=\"text-center m-4\">\n            <Link\n              to={`${prefix}${nextPage}`}\n              rel=\"next\"\n              className=\"btn-primary\"\n            >\n              Next Page <FiArrowRight />\n            </Link>\n          </Col>\n        )}\n      </Row>\n    </Layout>\n  );\n};\n\n/* eslint no-undef: \"off\" */\nexport const blogQuery = graphql`\n  query blogQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { posttype: { eq: \"blog\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt(format: PLAIN, pruneLength: 150, truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            description\n            cover {\n              publicURL\n              childImageSharp {\n                sizes(maxWidth: 768, maxHeight: 432) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}