{"version":3,"sources":["webpack:///./src/components/Media/Media.jsx","webpack:///./src/pages/media.jsx"],"names":["Gallery","imageZoomed","useRef","modal","modalImg","useEffect","document","addEventListener","event","target","current","style","display","data","useStaticQuery","console","log","Row","className","Col","lg","images","nodes","map","image","class","onClick","e","src","childImageSharp","fluid","key","id","fixed","ref","title","config","siteTitle"],"mappings":"oOAmEeA,EA7DC,WACd,IAAMC,EAAcC,mBACdC,EAAQD,mBACRE,EAAWF,mBAEjBG,qBAAU,WACRC,SAASC,iBAAiB,SAAS,SAACC,GAC/BA,EAAMC,QAAUN,EAAMO,SAAkC,GAAvBT,EAAYS,UAC9CP,EAAMO,QAAQC,MAAMC,QAAU,OAC9BX,EAAYS,SAAU,QAIzB,IAGH,IAKMG,EAAOC,yBAAe,cAoB5B,OADAC,QAAQC,IAAIH,GAEV,iCACE,kBAACI,EAAA,EAAD,CAAKC,UAAU,0BACb,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,6BACGP,EAAKQ,OAAOC,MAAMC,KAAI,SAAAC,GAAK,OAC1B,4BAAQC,MAAM,WAAWC,QAAS,SAACC,GAAD,OA/B1BC,EA+B4CJ,EAAMK,gBAAgBC,MAAMF,IA9B1F3B,EAAYS,SAAU,EACtBP,EAAMO,QAAQC,MAAMC,QAAU,aAC9BR,EAASM,QAAQkB,IAAMA,GAHN,IAACA,IAgCN,kBAAC,IAAD,CAAKH,MAAM,SAASM,IAAKP,EAAMQ,GAAIC,MAAOT,EAAMK,gBAAgBI,aAItE,yBAAKD,GAAG,aAAaP,MAAM,QAAQS,IAAK/B,GACtC,yBAAKsB,MAAM,gBAAgBO,GAAG,YAAYE,IAAK9B,S,qBCrD5C,4BACb,kBAAC,IAAD,KACE,yBAAKc,UAAU,mBACb,kBAAC,IAAD,CAAQiB,MAAK,WAAaC,IAAOC,YACjC,kBAAC,EAAD,U","file":"component---src-pages-media-jsx-96e59a1edb4fed351666.js","sourcesContent":["import React ,{useEffect, useRef} from \"react\";\nimport \"./Media.css\";\nimport Img from \"gatsby-image\"\nimport { Row, Col } from 'reactstrap';\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Gallery = () => {\n  const imageZoomed = useRef()\n  const modal = useRef()\n  const modalImg = useRef()\n\n  useEffect(() => {\n    document.addEventListener(\"click\", (event)=>{\n      if(event.target == modal.current && imageZoomed.current == true){\n        modal.current.style.display = 'none'\n        imageZoomed.current = false\n      }\n      \n    });\n  }, []);\n\n\n  const ZoomImages = (src)=>{\n    imageZoomed.current = true\n    modal.current.style.display = 'block'\n    modalImg.current.src = src\n  }\n  const data = useStaticQuery(graphql`\n  query Images{\n    images: allFile(filter: {relativeDirectory: { eq: \"images\"} }){\n      nodes {\n        id\n        name\n        childImageSharp {\n          fixed(width: 240, height: 240) {\n            ...GatsbyImageSharpFixed\n          }\n          fluid(maxWidth: 800) {\n            src\n          }\n      }\n    }\n  }\n  }\n`\n  )\n  console.log(data);\n  return (\n    <section>\n      <Row className=\"justify-content-center\">\n        <Col lg=\"8\">\n          <div>\n            {data.images.nodes.map(image => (\n              <button class=\"btnImage\" onClick={(e) => ZoomImages(image.childImageSharp.fluid.src,e)}>\n                <Img class=\"images\" key={image.id} fixed={image.childImageSharp.fixed}></Img>\n              </button>\n            ))}\n          </div>\n          <div id=\"imageModal\" class=\"modal\" ref={modal}>\n            <img class=\"modal-content\" id=\"imageZoom\" ref={modalImg}></img>\n          </div>\n        </Col>\n      </Row>\n    </section>\n  )\n}\n\nexport default Gallery\n\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Layout from \"../layout\";\nimport Media from \"../components/Media/Media\";\nimport config from \"../../data/SiteConfig\";\n\nexport default () => (\n  <Layout>\n    <div className=\"media-container\">\n      <Helmet title={`Media | ${config.siteTitle}`} />\n      <Media />\n    </div>\n  </Layout>\n);\n"],"sourceRoot":""}